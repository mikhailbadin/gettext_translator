#!.venv/bin/python

import typer

from src import translate_all
from typing_extensions import Annotated

cli = typer.Typer()

@cli.command(help="Translate *.po file using gettext")
def po(
    filepath_in: Annotated[str, typer.Argument(help='gettex input filename *.po for translate')],
    filepath_out: Annotated[str, typer.Argument(help='gettex output filename *.po for translation results')],
    lang: Annotated[str, typer.Argument(help='target translate language')] = 'ru',
):
    translate_all.translate_po(filepath_in, filepath_out, lang)

@cli.command(help="Translate *.mo file using gettext")
def mo(
    filepath_in: Annotated[str, typer.Argument(help='gettex input filename *.mo for translate')],
    filepath_out: Annotated[str, typer.Argument(help='gettex output filename *.mo for translation results')],
    lang: Annotated[str, typer.Argument(help='target translate language')] = 'ru',
):
    translate_all.translate_mo(filepath_in, filepath_out, lang)

@cli.command(help="Translate *.po to *.mo file using gettext")
def po_to_mo(
    filepath_in: Annotated[str, typer.Argument(help='gettex input filename *.po for translate')],
    filepath_out: Annotated[str, typer.Argument(help='gettex output filename *.mo for translation results')],
    lang: Annotated[str, typer.Argument(help='target translate language')] = 'ru',
):
    translate_all.translate_po_to_mo(filepath_in, filepath_out, lang)

if __name__ == "__main__":
    cli()
